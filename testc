import atexit
import ssl
from pyVim import connect
from pyVmomi import vim

# Set up connection information
vcenter_host = "your_vcenter_host"  # e.g., "vcenter.example.com"
vcenter_user = "your_vcenter_user"  # e.g., "administrator@vsphere.local"
vcenter_password = "your_vcenter_password"  # Your vCenter password
cluster_name = input("Enter the cluster name: ")

# Create a secure SSL context to avoid certificate issues
ssl_context = ssl._create_unverified_context()

# Connect to vCenter
service_instance = connect.SmartConnect(
    host=vcenter_host,
    user=vcenter_user,
    pwd=vcenter_password,
    sslContext=ssl_context,
)
# Ensure disconnection from vCenter upon script exit
atexit.register(connect.Disconnect, service_instance)

# Retrieve the content of the ServiceInstance
content = service_instance.RetrieveContent()

# Get the data center
datacenters = content.rootFolder.childEntity  # Top-level entities, usually data centers
datastore_details = []

# Iterate through datacenters and clusters to find the specified cluster
for datacenter in datacenters:
    if hasattr(datacenter, "hostFolder"):
        host_folder = datacenter.hostFolder
        clusters = host_folder.childEntity  # Get all clusters in the data center

        for cluster in clusters:
            if cluster.name == cluster_name:
                # Get the datastores associated with the cluster
                datastores = cluster.datastore
                for datastore in datastores:
                    datastore_details.append({
                        "Name": datastore.name,
                        "Capacity": datastore.summary.capacity,
                        "Free Space": datastore.summary.freeSpace,
                        "Type": datastore.summary.type,
                    })
                break

# Output the details of the datastores
if datastore_details:
    print("Datastore details for cluster", cluster_name, ":")
    for ds in datastore_details:
        print("Name:", ds["Name"])
        print("Capacity (bytes):", ds["Capacity"])
        print("Free Space (bytes):", ds["Free Space"])
        print("Type:", ds["Type"])
        print()
else:
    print("Cluster not found or no datastores associated with the cluster.")

